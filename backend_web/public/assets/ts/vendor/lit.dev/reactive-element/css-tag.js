/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const S=window.ShadowRoot&&(window.ShadyCSS===void 0||window.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,a=Symbol();class r{constructor(t,s){if(s!==a)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t}get styleSheet(){return S&&this.t===void 0&&(this.t=new CSSStyleSheet,this.t.replaceSync(this.cssText)),this.t}toString(){return this.cssText}}const c=new Map,i=e=>{let t=c.get(e);return t===void 0&&c.set(e,t=new r(e,a)),t},l=e=>i(typeof e=="string"?e:e+""),p=(e,...t)=>{const s=e.length===1?e[0]:t.reduce((o,u,h)=>o+(n=>{if(n instanceof r)return n.cssText;if(typeof n=="number")return n;throw Error("Value passed to 'css' function must be a 'css' function result: "+n+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(u)+e[h+1],e[0]);return i(s)},d=(e,t)=>{S?e.adoptedStyleSheets=t.map(s=>s instanceof CSSStyleSheet?s:s.styleSheet):t.forEach(s=>{const o=document.createElement("style");o.textContent=s.cssText,e.appendChild(o)})},y=S?e=>e:e=>e instanceof CSSStyleSheet?(t=>{let s="";for(const o of t.cssRules)s+=o.cssText;return l(s)})(e):e;export{r as CSSResult,d as adoptStyles,p as css,y as getCompatibleStyle,S as supportsAdoptingStyleSheets,l as unsafeCSS};export default null;